What is collection ?
a = 10
b = 15
c = 20

col = 10,15,20

# ordered 
col = 10,15,20 

# un ordered 
col = 15,10,20


# list can contain group of any items
# list is an ordered collection 
# list will allow duplicate values 
# to create a list, you can use [] brackets 
list = [10,12,13,14, True, "list", [1,2,3,4], 10]
print(list)

list = [10,12,13,14,15,16,17]
    #   0, 1, 2, 3, 4, 5, 6
    #   -7,-6,-5,-4,-3,-2,-1
# index 
# any element - 1
print("5th element", list[4])
print("5th element", list[-3])
print("4th element", list[3])
print("4th element", list[-4])

# out of bound 
print("8th element", list[7])


list = [10,12,13,14,15,16,17]

print(list)

# iterate a list
for item in  list:
    print(item)

# index 
for i in range(0, len(list)):
    print("Using Index",list[i])

# iterate from last 
for i in range(1, len(list)+1):
    print("Back", list[i*-1])


list = [10,12,13,14,15,16,17]

# adding element in list 
list.append(18)

print(list)

# insert 
list.insert(3,19)

print(list)

# slicing the list 
sliced_list = list[1:4] # [12,13,14]
print(sliced_list)

sliced_list = list[:5]# [10,12,13,14, 15]
print(sliced_list)

# slice till the end 
sliced_list = list[3:] #14,15,16,17
print(sliced_list)

list = [10,12,13,14,15,16,17]

# extend 
list1 = [18,19,20,21,22]

list.extend(list1)
print(list)

# for item in list1:
#     list.append(item)

print(list)

list = [10,12,13,14,15,16,17,13,13]

# remove
list.remove(13)
print(list)

# clear 
list.clear()
print(list)

# pop -> remove something from a specific index
list.pop(3)
print(list)

# sort 
list.sort()
print(list)

# copy a list
list_copy = list.copy()
print(list_copy)

list = [200,150,10,12,600,13,14,15,16,17,13,13]

# count
print(list.count(13))

list = [2,35,12,34,60,False, True]

list.sort()

print(list)

# tuple -> same as list but its not changeable 
# tuple can be created using () brackets 
# it will be very secure 
# faster 

tuple = (2,3,5,7,8)
print(tuple)

# index -> fetch element 
print(tuple[1])
print(tuple[-1])

# travers 
for item in tuple:
    print(item)

# traverse using index
for i in range(0, len(tuple)):
    print(tuple[i])

tup = (2,3,5,7,8)

# tuple -> list 
# add element 
# change the type to list 
tuple_list = list(tup)
tuple_list.append(200)
tupl2 = tuple(tuple_list)
print(tupl2)

# joining
tup1 = (2,3,3,3,3,5,7,8)
tup2 = (9,10,11,12)
tup = tup1 + tup2
print(tup)

# count 
print(tup.count(3))

# set -> set is same is list but it will not allow duplicates 
# set can be defined using {}
# set is an unordered collection 
st = {"Math","Phys","His","Geo","Eng"}
print(st)

# How set works 
# hash function 
# Math -> 1
# Phys -> 0
# Geo -> 2

# travers
for item in st:
    print(item)

# cant use index in set 
print(st[2])

# pop 
st = {2,3,4,5,6,7}
st.pop()
st.pop()
print(st) 

# add 
st.add(23)
print(st)

# union 
# [1,2,3,4,5] [1,2,6,7,8] => [1,2,3,4,5,6,7,8]

set1 = {1,2,3,4,5}
set2 = {1,2,6,7,8}

union_set = set1 | set2
print(union_set)

union_set = set1.union(set2)
print(union_set)

# intersection 
# [1,2,3,4,5] [1,2,6,7,8] => [1,2]

set1 = {1,2,3,4,5}
set2 = {1,2,6,7,8}

inter_set = set1 & set2
print(inter_set)

inter_set = set1.intersection(set2)
print(inter_set)
